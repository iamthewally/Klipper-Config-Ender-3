# This file contains common pin mappings for the BIGTREETECH SKR E3 Turbo. To use this config, the firmware should be compiled for the
# LPC1769.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: P1.4
dir_pin: !P1.8
enable_pin: !P1.0
microsteps: 16
rotation_distance: 40
#endstop_pin: ^P1.29
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -35
position_endstop: -35
position_max: 200
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: P1.1
diag_pin: ^P1.29
#run_current: 0.580
run_current: 0.700
#hold_current: 0.500
stealthchop_threshold: 250
driver_SGTHRS: 90


[stepper_y]
step_pin: P1.14
dir_pin: !P1.15
enable_pin: !P1.9
microsteps: 16
rotation_distance: 40
endstop_pin: ^P1.28
position_endstop: -26
position_min: -26
position_max: 235
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: P1.10
#diag_pin: P1.28
run_current: 0.700
hold_current: 0.500
stealthchop_threshold: 250

[stepper_z]
step_pin: P4.29
dir_pin: P4.28
enable_pin: !P1.16
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_min: -30
position_max: 250

[tmc2209 stepper_z]
uart_pin: P1.17
#diag_pin: P1.27
run_current: 0.700
#hold_current: 0.500
stealthchop_threshold: 250

[stepper_z1]
step_pin: P2.11
dir_pin: P2.12
enable_pin: !P0.21
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
#position_min: -20
#position_max: 250

[tmc2209 stepper_z1]
uart_pin: P0.22
#diag_pin: P1.27
run_current: 0.700
#hold_current: 0.500
stealthchop_threshold: 250

[z_tilt]
z_positions:
  250,110
  -30,110
points:
  -10,150
  180,150
speed: 300 
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 20
#   Number of times to retry if the probed points aren't within
#   tolerance.
#retry_tolerance: 0
retry_tolerance: 0.05
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[extruder]
step_pin: P2.6
#dir_pin: P2.7
dir_pin: !P2.7
enable_pin: !P0.4
microsteps: 16
#Henera:
#rotation_distance: 7.862
#Biqu H2 Revo
rotation_distance: 3.4334
nozzle_diameter: 0.4
filament_diameter: 1.750
#pressure_advance: 0.055
heater_pin: P2.3
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: P0.24
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 160
max_extrude_only_distance: 2000
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: P0.5
run_current: 0.847
stealthchop_threshold: 5
#run_current: 0.650
#hold_current: 0.500
#stealthchop_threshold: 999999

# Need to re-mount the sensor
#[filament_motion_sensor btt_smartie]
#detection_length: 7.0
#extruder: extruder
#switch_pin: !P1.26
#runout_gcode: FILAMENT_RUNOUT

#Having this in place adds a button to move the priont head without homing
[force_move]
enable_force_move: True 

[gcode_macro FILAMENT_RUNOUT]
gcode:
  M300 S1 P10
  M600
  M300 S1 P10

# Next couple macros found elsewhere
[gcode_macro M300]
#This makes the printer beep.  That is all.
gcode:
  {% set S = params.S|default(1000)|int %}
  {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if > 0 else 1 }
  G4 P{P}
    SET_PIN PIN=BEEPER VALUE=0

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M600]
# Filament swap.
gcode:
  {% set X = params.X|default(25)|float %}
  {% set Y = params.Y|default(25)|float %}
  {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-15 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#[extruder1]
#step_pin: P2.11
#dir_pin: P2.12
#enable_pin: !P0.21
#heater_pin: P2.4
#sensor_pin: P0.23
#...

#[tmc2209 extruder1]
#uart_pin: P0.22
##diag_pin: P1.25
#...

[heater_bed]
heater_pin: P2.5
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.25
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: P2.1

[heater_fan nozzle_cooling_fan]
pin: P2.2

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1340FF10A99869AFE32C425EC72000F5-if00

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2500
max_accel_to_decel: 2500
max_z_velocity: 10
square_corner_velocity: 10.0
max_z_accel: 100

[static_digital_output tmc_standby_pins]
pins: !P3.26, !P3.25, !P1.18, !P1.19, !P2.13

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P2.8,  EXP1_3=P0.19, EXP1_5=P0.20, EXP1_7=P0.17, EXP1_9=<GND>,
    EXP1_2=P0.16, EXP1_4=<RST>, EXP1_6=P0.15, EXP1_8=P0.18, EXP1_10=<5V>


###############################################
##  Probing/Mesh
###############################################


#No more offsets, nozzle is probe
[probe]
pin: !P1.23
#x_offset: 0
#y_offset: 0
speed: 10.0
samples: 3
samples_result: average
sample_retract_dist: 1.0
samples_tolerance: 0.1
samples_tolerance_retries: 3


[bed_mesh]
speed: 300 
horizontal_move_z: 5
mesh_min: 50,20
mesh_max: 200,175
probe_count: 3
fade_start: 1.0
mesh_pps: 2,2
algorithm: bicubic

[safe_z_home]
home_xy_position: 10,190
speed: 150.0
z_hop: 20.0
z_hop_speed: 10.0

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

#Found this macro when looking to calibrate filament swaps
[gcode_macro PAUSE]
description: Pause the print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[save_variables]
filename: ~/klipper_config/saved_variables.cfg

# I have not tested this macro.  Found elsewhere and want to try it for tuning pressure advance.
[gcode_macro PA_CAL]
# Klipper pressure advance line calibration macro.
# Usage: PA_CAL BED=100 NOZZLE=240 PA_START=0.0 PA_STOP=0.1 NZL=0.4
# Or you can execute with no parameters, which will use values from printer.cfg and saved_variables.cfg.
# First prints a line with current set PA, then prints 21 additional line segments starting with PA_START, and increasing to PA_STOP.
# Based on http://realdeuce.github.io/Voron/PA/pressure_advance.html
# Cleaned up and moved to using saved_variables.cfg

description: Tune Pressure Advance
gcode:
  # saved_variables.cfg
  {% set speed = printer.save_variables.variables.speed %}
  {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
  {% set bed_temp = printer.save_variables.variables.bed_temp %}

  # macro parameters
  {% set BED = params.BED|default(bed_temp)|float %}
  {% set NOZZLE = params.NOZZLE|default(nozzle_temp)|float %}
  {% set PA_START = params.PA_START|default(0.0)|float %}
  {% set PA_STOP = params.PA_STOP|default(0.1)|float %}
  {% set NZL = params.NZL|default(printer.configfile.config["extruder"]["nozzle_diameter"])|float %}

  # calculated variables
  {% set PA_STEP = (PA_STOP - PA_START) / 20 |float %}
  {% set E20 = (0.1147475 * NZL) * 20|float %}
  {% set E40 = (0.1147475 * NZL) * 40|float %}
  {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
  {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

  START_PRINT BED_TEMP={BED} NOZZLE_TEMP={NOZZLE}

  G21 ; millimeter units
  G90 ; absolute XYZ
  M83 ; relative E
  SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
  G92 E0
  M106 S0

  G1 X{(X_MID-40)} Y{(Y_MID-65)} F{speed}        ; move to start position
  G1 Z0.25 F300                                  ; move to layer height
  G1 E0.75 F1800                                 ; un-retract
  G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
  G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F3000    ; print line part two
  G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
  G1 E-0.75 F1800                                ; retract
  G1 Z1 F300                                     ; move above layer height

  {% for i in range(0, 21) %}
      SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
      M117 PA={PA_START + (i * PA_STEP)}, STEP={PA_STEP}.
      G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
      G1 Z0.25 F300                                         ; move to layer height
      G1 E0.75 F1800                                        ; un-retract
      G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
      G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F3000     ; print line part two
      G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
      G1 E-0.75 F1800                                       ; retract
      G1 Z1 F300                                            ; move above layer height
  {% endfor %}

  END_PRINT

  # these may not work, in which case you will need to count and do the math yourself!
  M117 New PA = ({PA_START} + (bestLine * {PA_STEP}) )
  {action_respond_info ("Find best line and multiply it by (" + PA_START|string + " + (bestLine * " + PA_STEP|string + ") ) to find your PA setting.")}


# These next 2 get used pretty frequently
[gcode_macro PID_TUNE_NOZZLE]
description: PID tune the nozzle at 230
gcode: 
  M106 S128
  PID_CALIBRATE HEATER=extruder TARGET=260
  SAVE_CONFIG

[gcode_macro PID_TUNE_BED]
description: PID tune the bed at 60
gcode: 
  M106 S128
  PID_CALIBRATE HEATER=heater_bed TARGET=80
  SAVE_CONFIG

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  # Turn off fan
  M106 S0
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  ##### if we can move up by 50mm then we should do that
  {% if act_z < (max_z - 50.0) %}
      {% set z_safe = act_z + 50.0 %}
  {% else %}
      {% set z_safe = max_z %}
  {% endif %}
  ##### end of definitions #####
  G90
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G1 X20 Y200 F6000
  {% endif %}
  CANCEL_PRINT_BASE

# I LOVE THIS MACRO
[gcode_macro PREP_TO_PRINT]
description: Prepare for a print by heating, homing, tilting, and bed mesh
gcode: 
  #### Disable stepper, clear mesh, starting fresh
  {% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %} 
	{% set oldcurrent1 = printer.configfile.settings["tmc2209 stepper_z1"].run_current %}
  M18 
  BED_MESH_CLEAR
  G28
  G0 Z25
  #### heating
  #M104 S150
  #M190 S50
  #### homing
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.15
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.15
  G28
  #### tilting
  Z_TILT_ADJUST
  #### bed mesh
  BED_MESH_CALIBRATE
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={oldcurrent1}
  G0 Z25
  #### set flow rate at 112% (eventually need to re-calibrate esteps)
  #Not anymore, recalibrated, leaving here as a reminder
  #nevermind, we're back on this shit again
  #M221 S112 #no no I think we might have it


# I'll bring this back soon
#[input_shaper]
#shaper_freq_x: 50.0
#shaper_freq_y: 92.30
#shaper_type: mzv

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.100
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.741643, -0.660810, -0.714143
#*# 	  -0.244143, -0.269143, -0.276643
#*# 	  0.205857, 0.175857, 0.089190
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 3
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.278
#*# pid_ki = 1.788
#*# pid_kd = 771.568
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.059
#*# pid_ki = 4.362
#*# pid_kd = 58.909
